# Default values for facetraining-arm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: coredgeio/face-training-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "arm64"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: face-training.local
      paths:
      - path: /
        backend:
          serviceName: face-training.local
          servicePort: 80
  tls: []
  #  - secretName: face-training.local
  #    hosts:
  #      - face-training.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

redis:
  persistence:
    enabled: false
  fullname: redis
  password: "password"
  image:
    arm: true
    armImage: arm32v7/redis:5.0.7
    x86Image: redis:5.0.7
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 50m
      memory: 300Mi
  service:
    type: ClusterIP
    port: 6379
  redis:
    port: 6379
    # Define a password to use on the redis server or 20 alphanumeric character one will be randomly generated
    password: "password"
    persistence:
      enabled: false
      storageClassName: ""
    saves:
      - seconds: 900
        threshold: 10
      - seconds: 30
        threshold: 3